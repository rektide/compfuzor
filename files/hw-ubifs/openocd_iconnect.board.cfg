# Marvell iconnect
# via http://hardsoftmix.blogspot.com/2011/07/jtag-on-iconnect.html
# via http://hardsoftmix.blogspot.com/2012/03/patch-u-boot-for-iconnect.html

# functions init2 initialise GPIOs, DDR RAM and various registers to place the machine in a state permitting transfers to flash and RAM
# function iconnect_reset_cpu puts the cpu in supervisor mode prior to program the nand flash (u-boot, kernel)

source [find target/feroceon.cfg]

$_TARGETNAME configure \
	-work-area-phys 0x00500000 \
	-work-area-size 65536 \
	-work-area-backup 0

#	-work-area-virt 0xC8011000 \

#arm7_9 dcc_downloads enable

# this assumes the hardware default peripherals location before u-Boot moves it
set _FLASHNAME $_CHIPNAME.flash
#nand device $_FLASHNAME orion 0 0xd8000000
#nand device $_FLASHNAME orion feroceon.cpu 0xd8000000
#nand device $_FLASHNAME orion 0xFFE00000
#nand device $_FLASHNAME orion feroceon.cpu 0xffe00000
nand device feroceon.flash orion feroceon.cpu 0xd8000000
#nand device orion 0xffe00000

proc iconnect_reset_cpu { } {

#	System and User mode registers
#	   r0: 00000000       r1: 00000000       r2: 00000000       r3: 00000000
#	   r4: 00000000       r5: 00000000       r6: 00000000       r7: 00000000
#	   r8: 00000000       r9: 00000000      r10: 00000000      r11: 00000000
#	 r12: 00000000   sp_usr: 7dddee86   lr_usr: dffebe46       pc: ffff0a42
#	 cpsr: 400000f3

	reg r1 0
	reg r2 0
	reg r3 0
	reg r4 0
	reg r5 0
	reg r6 0
	reg r7 0
	reg r8 0
	reg r9 0
	reg r10 0
	reg r11 0
	reg r12 0
	reg sp_usr 0x800000
	reg lr_usr 0
	reg pc 0x600000
# Set the CPU in Supervisor mode
	reg cpsr 0x13

#	FIQ mode shadow registers
#	  r8_fiq: fbcfff64   r9_fiq: d7dfafd6  r10_fiq: 1fff6d2e  r11_fiq: 1db65df4
#	 r12_fiq: ff5a6de4   sp_fiq: 745fe7d5   lr_fiq: 89f7ae3e spsr_fiq: 00000000

	reg r8_fiq 0
	reg r9_fiq 0
	reg r10_fiq 0
	reg r11_fiq 0
	reg r12_fiq 0
	reg sp_fiq 0x801000
	reg lr_fiq 0
	reg spsr_fiq 0

#	Supervisor mode shadow registers
#	  sp_svc: fffeff85   lr_svc: ffff0a43 spsr_svc: 00000000

	reg sp_svc 0x802000
	reg lr_svc 0
	reg spsr_svc 0

#	Abort mode shadow registers
#	  sp_abt: 51fe66f7   lr_abt: d7abaef7 spsr_abt: 00000000

	reg sp_abt 0x803000
	reg lr_abt 0
	reg spsr_abt 0

#	IRQ mode shadow registers
#	  sp_irq: 7fdb4ed5   lr_irq: 6d41122e spsr_irq: 00000000

	reg sp_irq 0x804000
	reg lr_irq 0
	reg spsr_irq 0

#	Undefined instruction mode shadow registers
#	  sp_und: 75ffef7e   lr_und: d75b6cd1 spsr_und: 00000000

	reg sp_und 0x805000
	reg lr_und 0
	reg spsr_und 0

}

proc init2 { } {

	# We need to assert DBGRQ while holding nSRST down.
	# However DBGACK will be set only when nSRST is released.
	# Furthermore, the JTAG interface doesn't respond at all when
	# the CPU is in the WFI (wait for interrupts) state, so it is
	# possible that initial tap examination failed.  So let's
	# re-examine the target again here when nSRST is asserted which
	# should then succeed.
	jtag_reset 0 1
	feroceon.cpu arp_examine
	halt 0
	jtag_reset 0 0
	wait_halt

	arm mcr 15 0 0 1 0 0x00052078

	arm7_9 dbgrq disable		# use of EmbeddedICE dbgrq instead of breakpoint for target halt enabled

# Configure RGMII-0 interface pad voltage to 1.8V
	mww 0xD00100e0 0x1b1b1b9b

#Dram initalization for SINGLE x16 CL=5 @ 400MHz
# DDR Configuration register
	mww 0xD0001400 0x43000618
# bit13-0:  0xc30 (3120 DDR2 clks refresh rate)
# bit23-14: zero
# bit24: 1= enable exit self refresh mode on DDR access
# bit25: 1 required
# bit29-26: zero
# bit31-30: 01

# DDR Controller Control Low
	mww 0xD0001404 0x37543000
#	mww 0xD0001404 0x38643000	# DDR Controller Control Low
# bit 4:    0=addr/cmd in smame cycle
# bit 5:    0=clk is driven during self refresh, we don't care for APX
# bit 6:    0=use recommended falling edge of clk for addr/cmd
# bit14:    0=input buffer always powered up
# bit18:    1=cpu lock transaction enabled
# bit23-20: 5=recommended value for CL=5 and STARTBURST_DEL disabled bit31=0
# bit27-24: 7= CL+2, STARTBURST sample stages, for freqs 400MHz, unbuffered DIMM
# bit30-28: 3 required
# bit31:    0=no additional STARTBURST delay

# DDR Timing (Low) (active cycles value +1)
	mww 0xD0001408 0x22125451
#	mww 0xD0001408 0x22127471	# DDR Timing (Low) (active cycles value +1)
# bit3-0:   TRAS lsbs
# bit7-4:   TRCD
# bit11- 8: TRP
# bit15-12: TWR
# bit19-16: TWTR
# bit20:    TRAS msb
# bit23-21: 0x0
# bit27-24: TRRD
# bit31-28: TRTP

#  DDR Timing (High)
	mww 0xD000140C 0x00000a33
# bit6-0:   TRFC
# bit8-7:   TR2R
# bit10-9:  TR2W
# bit12-11: TW2W
# bit31-13: zero required

#  DDR Address Control
	mww 0xD0001410 0x0000000c
# bit1-0:   00, Cs0width=x8
# bit3-2:   11, Cs0size=1Gb
# bit5-4:   00, Cs1width=x8
# bit7-6:   11, Cs1size=1Gb
# bit9-8:   00, Cs2width=nonexistent
# bit11-10: 00, Cs2size =nonexistent
# bit13-12: 00, Cs3width=nonexistent
# bit15-14: 00, Cs3size =nonexistent
# bit16:    0,  Cs0AddrSel
# bit17:    0,  Cs1AddrSel
# bit18:    0,  Cs2AddrSel
# bit19:    0,  Cs3AddrSel
# bit31-20: 0 required

#  DDR Open Pages Control
	mww 0xD0001414 0x00000000
# bit0:    0,  OpenPage enabled
# bit31-1: 0 required

#  DDR Operation
	mww 0xD0001418 0x00000000
# bit3-0:   0x0, DDR cmd
# bit31-4:  0 required

#  DDR Mode
	mww 0xD000141C 0x00000652
# bit2-0:   2, BurstLen=2 required
# bit3:     0, BurstType=0 required
# bit6-4:   4, CL=5
# bit7:     0, TestMode=0 normal
# bit8:     0, DLL reset=0 normal
# bit11-9:  6, auto-precharge write recovery
# bit12:    0, PD must be zero
# bit31-13: 0 required

#  DDR Extended Mode
	mww 0xD0001420 0x00000004
# bit0:    0,  DDR DLL enabled
# bit1:    0,  DDR drive strenght normal
# bit2:    0,  DDR ODT control lsd (disabled)
# bit5-3:  000, required
# bit6:    1,  DDR ODT control msb, (disabled)
# bit9-7:  000, required
# bit10:   0,  differential DQS enabled
# bit11:   0, required
# bit12:   0, DDR output buffer enabled
# bit31-13: 0 required

#  DDR Controller Control High
	mww 0xD0001424 0x0000F17F
# bit2-0:  111, required
# bit3  :  1  , MBUS Burst Chop disabled
# bit6-4:  111, required
# bit7  :  0
# bit8  :  1  , add writepath sample stage, must be 1 for DDR freq >= 300MHz
# bit9  :  0  , no half clock cycle addition to dataout
# bit10 :  0  , 1/4 clock cycle skew enabled for addr/ctl signals
# bit11 :  0  , 1/4 clock cycle skew disabled for write mesh
# bit15-12: 1111 required
# bit31-16: 0    required

# DDR2 ODT Read Timing (default values)
	mww 0xD0001428 0x00085520
# DDR2 ODT Write Timing (default values)
	mww 0xD000147C 0x00008552



# CS(0)n Base address to 0x0
	mww 0xD0001500 0x00000000
# CS(0)n Size
	mww 0xD0001504 0x07FFFFF1
# bit0:    1,  Window enabled
# bit1:    0,  Write Protect disabled
# bit3-2:  00, CS0 hit selected
# bit23-4: ones, required
# bit31-24: 0x0F, Size (i.e. 256MB)

# CS(1)n Base address to 256Mb
	mww 0xD0001508 0x10000000
# CS(1)n Size 256Mb Window enabled for CS1
	mww 0xD000150C 0x00000000

# CS(2)n Size, window disabled
	mww 0xD0001514 0x00000000
# CS(3)n Size, window disabled
	mww 0xD000151C 0x00000000

#  DDR ODT Control (Low)
	mww 0xD0001494 0x00010000
#  DDR ODT Control (High)
	mww 0xD0001498 0x00000000
# bit1-0:  00, ODT0 controlled by ODT Control (low) register above
# bit3-2:  01, ODT1 active NEVER!
# bit31-4: zero, required

#  DDR2 Dunit ODT Control Register
    mww 0xD000149C 0x0000E403
#	mww 0xD000149C 0x0000E803	# CPU ODT Control

#  DDR SDRAM Initialization Control Register
    mww 0xD0001480 0x00000001
#bit0=1, enable DDR init upon this register write


    mww 0xD0001620 0x00465000
    mww 0xD0020134 0x66666666
    mww 0xD0020138 0x66666666

#  Main IRQ Interrupt Mask Register
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000

#  MPP  0 to 7
	mww 0xD0010000 0x01111111
#  MPP  8 to 15
	mww 0xD0010004 0x11113322
#  MPP 16 to 23
	mww 0xD0010008 0x00001111

#  NAND Read Parameters Register
	mww 0xE8010418 0x003E07CF
#  NAND Write Parameters Register
	mww 0xE801041C 0x000F0F0F
#  NAND Flash Control Register
	mww 0xE8010470 0x01C7D943

}

proc init3 { } {

	# We need to assert DBGRQ while holding nSRST down.
	# However DBGACK will be set only when nSRST is released.
	# Furthermore, the JTAG interface doesn't respond at all when
	# the CPU is in the WFI (wait for interrupts) state, so it is
	# possible that initial tap examination failed.  So let's
	# re-examine the target again here when nSRST is asserted which
	# should then succeed.
	jtag_reset 0 1
	feroceon.cpu arp_examine
	halt 0
	jtag_reset 0 0
	wait_halt

	arm mcr 15 0 0 1 0 0x00052078

	arm7_9 dbgrq enable		# use of EmbeddedICE dbgrq instead of breakpoint for target halt enabled

	mdw 0xFFD100e0
# Configure RGMII-0 interface pad voltage to 1.8V
	mww 0xD00100e0 0x1b1b1b9b

	mdw 0xFFD01400
	# DDR Configuration register
	mdw 0xFFD01404
	mdw 0xFFD01408
	mdw 0xFFD0140C
	mdw 0xFFD01410
	mdw 0xFFD01414
	mdw 0xFFD01418
	mdw 0xFFD0141C
	mdw 0xFFD01420
	mdw 0xFFD01428
	mdw 0xFFD0147C

#Dram initalization for SINGLE x16 CL=5 @ 400MHz
	mww 0xD0001400 0x43000618
	# DDR Configuration register
# bit13-0:  0xc30 (3120 DDR2 clks refresh rate)
# bit23-14: zero
# bit24: 1= enable exit self refresh mode on DDR access
# bit25: 1 required
# bit29-26: zero
# bit31-30: 01


	mww 0xD0001404 0x37543000
	# DDR Controller Control Low
#	mww 0xD0001404 0x38643000	# DDR Controller Control Low
# bit 4:    0=addr/cmd in smame cycle
# bit 5:    0=clk is driven during self refresh, we don't care for APX
# bit 6:    0=use recommended falling edge of clk for addr/cmd
# bit14:    0=input buffer always powered up
# bit18:    1=cpu lock transaction enabled
# bit23-20: 5=recommended value for CL=5 and STARTBURST_DEL disabled bit31=0
# bit27-24: 7= CL+2, STARTBURST sample stages, for freqs 400MHz, unbuffered DIMM
# bit30-28: 3 required
# bit31:    0=no additional STARTBURST delay

	mww 0xD0001408 0x22125451
	# DDR Timing (Low) (active cycles value +1)
#	mww 0xD0001408 0x22127471	# DDR Timing (Low) (active cycles value +1)
# bit3-0:   TRAS lsbs
# bit7-4:   TRCD
# bit11- 8: TRP
# bit15-12: TWR
# bit19-16: TWTR
# bit20:    TRAS msb
# bit23-21: 0x0
# bit27-24: TRRD
# bit31-28: TRTP

	mww 0xD000140C 0x00000a33
	#  DDR Timing (High)
# bit6-0:   TRFC
# bit8-7:   TR2R
# bit10-9:  TR2W
# bit12-11: TW2W
# bit31-13: zero required

	mww 0xD0001410 0x0000000c
	#  DDR Address Control
# bit1-0:   00, Cs0width=x8
# bit3-2:   11, Cs0size=1Gb
# bit5-4:   00, Cs1width=x8
# bit7-6:   11, Cs1size=1Gb
# bit9-8:   00, Cs2width=nonexistent
# bit11-10: 00, Cs2size =nonexistent
# bit13-12: 00, Cs3width=nonexistent
# bit15-14: 00, Cs3size =nonexistent
# bit16:    0,  Cs0AddrSel
# bit17:    0,  Cs1AddrSel
# bit18:    0,  Cs2AddrSel
# bit19:    0,  Cs3AddrSel
# bit31-20: 0 required

	mww 0xD0001414 0x00000000
	#  DDR Open Pages Control
# bit0:    0,  OpenPage enabled
# bit31-1: 0 required

	mww 0xD0001418 0x00000000
	#  DDR Operation
# bit3-0:   0x0, DDR cmd
# bit31-4:  0 required

	mww 0xD000141C 0x00000652
	#  DDR Mode
# bit2-0:   2, BurstLen=2 required
# bit3:     0, BurstType=0 required
# bit6-4:   4, CL=5
# bit7:     0, TestMode=0 normal
# bit8:     0, DLL reset=0 normal
# bit11-9:  6, auto-precharge write recovery
# bit12:    0, PD must be zero
# bit31-13: 0 required

	mww 0xD0001420 0x00000004
	#  DDR Extended Mode
# bit0:    0,  DDR DLL enabled
# bit1:    0,  DDR drive strenght normal
# bit2:    0,  DDR ODT control lsd (disabled)
# bit5-3:  000, required
# bit6:    1,  DDR ODT control msb, (disabled)
# bit9-7:  000, required
# bit10:   0,  differential DQS enabled
# bit11:   0, required
# bit12:   0, DDR output buffer enabled
# bit31-13: 0 required

	mww 0xD0001424 0x0000F17F
	#  DDR Controller Control High
# bit2-0:  111, required
# bit3  :  1  , MBUS Burst Chop disabled
# bit6-4:  111, required
# bit7  :  0
# bit8  :  1  , add writepath sample stage, must be 1 for DDR freq >= 300MHz
# bit9  :  0  , no half clock cycle addition to dataout
# bit10 :  0  , 1/4 clock cycle skew enabled for addr/ctl signals
# bit11 :  0  , 1/4 clock cycle skew disabled for write mesh
# bit15-12: 1111 required
# bit31-16: 0    required

	mww 0xD0001428 0x00085520
	# DDR2 ODT Read Timing (default values)
	mww 0xD000147C 0x00008552
	# DDR2 ODT Write Timing (default values)






	mdw 0xFFD01500
	# CS(0)n Base address to 0x0
	mdw 0xFFD01504
	mdw 0xFFD01508
	mdw 0xFFD0150C

	mww 0xD0001500 0x00000000
	# CS(0)n Base address to 0x0
	mww 0xD0001504 0x07FFFFF1
	# CS(0)n Size
# bit0:    1,  Window enabled
# bit1:    0,  Write Protect disabled
# bit3-2:  00, CS0 hit selected
# bit23-4: ones, required
# bit31-24: 0x0F, Size (i.e. 256MB)

	mww 0xD0001508 0x10000000
	# CS(1)n Base address to 256Mb
	mww 0xD000150C 0x00000000
	# CS(1)n Size 256Mb Window enabled for CS1

	mww 0xD0001514 0x00000000
	# CS(2)n Size, window disabled
	mww 0xD000151C 0x00000000
	# CS(3)n Size, window disabled

	mww 0xD0001494 0x00010000
	#  DDR ODT Control (Low)
	mww 0xD0001498 0x00000000
	#  DDR ODT Control (High)
# bit1-0:  00, ODT0 controlled by ODT Control (low) register above
# bit3-2:  01, ODT1 active NEVER!
# bit31-4: zero, required


    mww 0xD000149C 0x0000E403
 #  DDR2 Dunit ODT Control Register
#	mww 0xD000149C 0x0000E803	# CPU ODT Control


    mww 0xD0001480 0x00000001
 #  DDR SDRAM Initialization Control Register
#bit0=1, enable DDR init upon this register write


    mww 0xD0001620 0x00465000
    mww 0xD0020134 0x66666666
    mww 0xD0020138 0x66666666

	mww 0xD0020204 0x00000000
 #  Main IRQ Interrupt Mask Register
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000
	mww 0xD0020204 0x00000000


	mww 0xD0010000 0x01111111
 #  MPP  0 to 7
	mww 0xD0010004 0x11113322
 #  MPP  8 to 15
	mww 0xD0010008 0x00001111
 #  MPP 16 to 23

	mdw 0xFFE10418
 #  NAND Read Parameters Register
	mdw 0xFFE1041C
	mdw 0xFFE10470

	mww 0xE8010418 0x003E07CF
 #  NAND Read Parameters Register
	mww 0xE801041C 0x000F0F0F
 #  NAND Write Parameters Register
	mww 0xE8010470 0x01C7D943
 #  NAND Flash Control Register

	mdw 0xFFE10418
 #  NAND Read Parameters Register
	mdw 0xFFE1041C
	mdw 0xFFE10470

}

proc init4 { } {

    mww 0xD0020000 0x1fffe841
	# Window0 Control Register : enabled, pci express, addr = 0x8000000
# Bit  Field Type / InitVal		Description
#	0      win_en
#              RW                 Window0 Enable
#              0x1                0 = Disable: Window is disabled.
#                                 1 = Enable: Window is enabled.
#3:1   Reserved RSVD               Reserved
#               0x0
#      Target
#7:4            RW                 Specifies the target interface associated with this window.
#               0x4                See the "Target Interface Configurations" section.
#                                  NOTE: Do not configure this field to the SDRAM Controller.
#      Attr
#15:8           RW                 Specifies the target interface attributes associated with this window.
#               0xe8               See the "Target Interface Configurations" section.
#      Size     RW                 Window Size
#31:16
#               0x1FFF             Used with the Base register to set the address window size and location. Must
#                                  be programmed from LSB to MSB as sequence of 1<e2>..s followed by sequence of
#                                  0<e2>..s. The number of 1<e2>..s specifies the size of the window in 64 KByte granularity
#                                  (e.g., a value of 0x00FF specifies 256 = 16 MByte).
#                                  NOTE: A value of 0x0 specifies 64-KByte size.


# Table 2:       Units IDs and Attributes<e2>..CPU
#                        F ie l d          Description
#                        Target Unit ID    0x0 = Reserved
#                                          0x1 = NAND flash, SPI flash, or bootROM
#                                          0x2 = Reserved
#                                          0x3 = Security Accelerator SRAM
#                                          0x4 = PCI Express
#                                          0x5<e2>..0xF = Reserved
# Attributes[7:0]   If the target is the NAND flash, set the <Attr> field (bits [7:0]) to 0x2F.
#                   If the target device is the SPI flash, set the <Attr> field (bits [7:0]) to 0x1E.
#                   If the target device is the bootROM, set the <Attr> field (bits [7:0]) to 0x1D.
#                   If the target is PCI Express interface:
#                    <e2>.<a2> To generate I/O transactions, set the <Attr> field (bits [7:0]) to 0xE0.
#                    <e2>.<a2> To generate memory transactions, set the <Attr> field (bits [7:0]) to 0xE8.
#                   If the target is the Security Accelerator SRAM:
#                    <e2>.<a2> Bits[1:0]<e2>..Data swapping<e2>..set to 0x1.
#                        00 = byte swap
#                        01 = no swap
#                        10 = byte and word swap
#                        11 = word swap
#                    <e2>.<a2> Bits[7:2] = Reserved. Must be 0.


# Window0 Base Register
    mww 0xD0020004 0x80000000
# Window0 Remap Low Register
    mww 0xD0020008 0x80000000
# Window0 Remap High Register
    mww 0xD002000C 0x00000000

# Window1 Control Register : enabled, nand flash, addr = 0xD8000000
    mww 0xD0020010 0x07ff2f11
    mww 0xD0020014 0xD8000000
    mww 0xD0020018 0xD8000000
    mww 0xD002001C 0x00000000

# Window2 Control Register : enabled, pci express, addr = 0xD800000
    mww 0xD0020020 0x0000e041
    mww 0xD0020024 0xc0000000
    mww 0xD0020028 0xd8000000
    mww 0xD002002C 0x00000000

# Window3 Control Register : disabled
    mww 0xD0020030 0x00000000

# Window4 Control Register : enabled, Security Accelerator SRAM, addr = 0xc8010000
    mww 0xD0020040 0x00000131
    mww 0xD0020044 0xc8010000
    mww 0xD0020048 0xd8000000
    mww 0xD002004C 0x00000000

# Window5 Control Register : enabled, SPI flash, addr = 0xE800000
    mww 0xD0020050 0x07ff1e11
    mww 0xD0020054 0xe8000000
    mww 0xD0020058 0xd8000000
    mww 0xD002005C 0x00000000

# Window6 Control Register : enabled, BootROM, addr = 0xF0000000
    mww 0xD0020060 0x07ff1d11
    mww 0xD0020064 0xf0000000
    mww 0xD0020068 0xd8000000
    mww 0xD002006C 0x00000000

# Window7 Control Register : enabled, BootROM, addr = 0xF8000000
    mww 0xD0020070 0x07ff1d11
    mww 0xD0020074 0xf8000000
    mww 0xD0020078 0xd8000000
    mww 0xD002007C 0x00000000

	mdw 0xFFD20080
# Device Internal Registers Base Address
    mww 0xD0020080 0xd0000000
}

proc iconnect_reflash_uboot { } {

	# reflash the u-Boot binary and reboot into it
	iconnect_init
	nand probe 0
	nand list
	reset halt
	nand erase 0 0x0 0xc0000
	nand info 0 0 10
	nand write 0 {{VAR}}/uboot.kwb 0 oob_softecc_kw
	nand verify 0 {{VAR}}/uboot.kwb 0
#	nand write 0 uboot.bin 0 oob_softecc_kw
	resume

}

proc iconnect_reflash_uboot_env { } {

	# reflash the u-Boot environment variables area
	iconnect_init
	nand probe 0
	nand list
	reset halt
	nand erase 0 0xa0000 0x40000
	nand write 0 {{VAR}}/uboot-env.bin 0xa0000 oob_softecc_kw
	resume

}

proc iconnect_load_uboot { } {

	# load u-Boot into RAM and execute it
	iconnect_init
	load_image u-boot 0x0 elf
	load_image {{VAR}}/uboot.bin 0x00600000 bin
	verify_image u-boot
	resume 0x00600000

	#load_image /mnt/data/download/iconnect/gomes/openwrt-kirkwood-iconnect-u-boot.bin 0x00600000 bin

	#load_image u-boot.kwb 0x00600000
	#resume 0x00600200

}

proc init5 { } {
	init
	init3
	init4
	iconnect_reset_cpu
	load_image {{VAR}}/uboot.bin 0x00600000 bin
	nand probe 0
	nand list
}

proc init6 { } {
	init
	init2
	init4
	iconnect_reset_cpu
	nand probe 0
	nand list
	nand erase 0 0x0 0xc0000
	nand info 0 0 10
	nand write 0 {{VAR}}/uboot.kwb 0 oob_softecc_kw
#	nand verify 0 u-boot.kwb 0 oob_softecc_kw
#	nand dump 0 xx 0x600000 400000
#	nand erase 0 0xA0000 0x20000
#	nand write 0 iconnect_uboot_env.txt 0xa0000 oob_softecc_kw
#	nand write 0 iconnect-mtd1 0xA0000 oob_softecc_kw
}
