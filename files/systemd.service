{% macro phrase(name, expression) -%}
{%- for el in expression|default([])|arrayitize -%}
{{ name }}={{ el if el != False and el != True else el|ternary('true', 'false') }}
{% endfor -%}
{%- endmacro -%}

{%- macro phrases(name) -%}
{% set phrs = hostvars[inventory_hostname]['SYSTEMD_PHRASES_'+name|upper]|default(vars['SYSTMED_PHRASES_'+name|upper]) -%}
{% for phr in phrs %}
{% for val in hostvars[inventory_hostname]['SYSTEMD_' + phr|upper|replace(' ', '_')]|default(vars['SYSTEMD_' + phr|upper|replace(' ', '_')])|default([])|arrayitize %}
{{ phr|replace(' ', '') }}={{ val if val != True and val != False else val|ternary('true', 'false') }}
{% endfor -%}
{% endfor -%}
{% endmacro -%}

[Unit]
{#
{% if not USERMODE|default(False) %}
Requires=network.target
After=network.target
{% endif %}
-#}
{# {{ phrases('unit') }} -#}
{{ phrase('Description', SYSTEMD_DESCRIPTION) -}}
{{ phrase('Documentation', SYSTEMD_DOCUMENTATION) -}}
{{ phrase('Requires', SYSTEMD_REQUIRES) -}}
{{ phrase('Requisite', SYSTEMD_REQUISITE) -}}
{{ phrase('Wants', SYSTEMD_WANTS) -}}
{{ phrase('BindsTo', SYSTEMD_BINDS_TO) -}}
{{ phrase('PartOf', SYSTEMD_PART_OF) -}}
{{ phrase('Conflicts', SYSTEMD_CONFLICTS) -}}
{{ phrase('Before', SYSTEMD_BEFORE) -}}
{{ phrase('After', SYSTEMD_AFTER) -}}
{{ phrase('OnFailure', SYSTEMD_ON_FAILURE) -}}
{{ phrase('PropogatesReloadTo', SYSTEMD_PROPOGATES_RELOAD_TO) -}}
{{ phrase('ReloadPropogatedFrom', SYSTEMD_RELOAD_PROPOGATED_FROM) -}}
{{ phrase('JoinNamespaceOf', SYSTEMD_JOIN_NAMESPACE_OF) -}}
{{ phrase('RequiresMountsFor', SYSTEMD_REQUIRES_MOUNTS_FOR) -}}
{{ phrase('OnFailureJobModes', SYSTEMD_ON_FAILURE_JOB_MODES) -}}
{{ phrase('IgnoreOnIsolate', SYSTEMD_IGNORE_ON_ISOLATE) -}}
{{ phrase('StopWhenUnneeded', SYSTEMD_STOP_WHEN_UNNEEDED) -}}
{{ phrase('RefuseManualStart', SYSTEMD_REFUSE_MANUAL_START) -}}
{{ phrase('RefuseManualStop', SYSTEMD_REFUSE_MANUAL_STOP) -}}
{{ phrase('DefaultDependencies', SYSTEMD_DEFAULT_DEPENDENCIES) -}}
{{ phrase('AllowIsolate', SYSTEMD_ALLOW_ISOLATE) -}}
{{ phrase('JobTimeoutSec', SYSTEMD_JOB_TIMEOUT_SEC) -}}
{{ phrase('JobTimeoutAction', SYSTEMD_JOB_TIMEOUT_ACTION) -}}
{{ phrase('JobTimeoutRebootArguments', SYSTEMD_JOB_TIMEOUT_REBOOT_ARGUMENTS) -}}
{{ phrase('StartLimitIntervalSec', SYSTEMD_START_LIMIT_INTERVAL_SEC) -}}
{{ phrase('StartLimitBurst', SYSTEMD_START_LIMIT_BURST) -}}
{{ phrase('StartLimitAction', SYSTEMD_START_LIMIT_ACTION) -}}
{{ phrase('RebootArgument', SYSTEMD_REBOOT_ARGUMENT) -}}
{{ phrase('ConditionArchitecture', SYSTEMD_CONDITION__ARCHITECTURE) -}}
{{ phrase('ConditionVirtualization', SYSTEMD_CONDITION_VIRTUALIZATION) -}}
{{ phrase('ConditionHost', SYSTEMD_CONDITION_HOST) -}}
{{ phrase('ConditionKernelCommandLine', SYSTEMD_CONDITION_KERNEL_COMMAND_LINE) -}}
{{ phrase('ConditionSecurity', SYSTEMD_CONDITION_SECURITY) -}}
{{ phrase('ConditionCapability', SYSTEMD_CONDITION_CAPABILITY) -}}
{{ phrase('ConditionACPower', SYSTEMD_CONDITION_AC_POWER) -}}
{{ phrase('ConditionNeedsUpdate', SYSTEMD_CONDITION_NEEDS_UPDATE) -}}
{{ phrase('ConditionFirstBoot', SYSTEMD_CONDITION_FIRST_BOOT) -}}
{{ phrase('ConditionPathExists', SYSTEMD_CONDITION_PATH_EXISTS) -}}
{{ phrase('ConditionPathExistsGlob', SYSTEMD_CONDITION_PATH_EXISTS_GLOB) -}}
{{ phrase('ConditionPathIsDirectory', SYSTEMD_CONDITION_PATH_IS_DIRECTORY) -}}
{{ phrase('ConditionPathIsSymbolicLink', SYSTEMD_CONDITION_PATH_IS_SYMBOLIC_LINK) -}}
{{ phrase('ConditionPathIsMountPoint', SYSTEMD_CONDITION_PATH_IS_MOUNT_POINT) -}}
{{ phrase('ConditionPathIsReadWrite', SYSTEMD_CONDITION_PATH_IS_READ_WRITE) -}}
{{ phrase('ConditionDirectoryNotEmpty', SYSTEMD_CONDITION_DIRECTORY_NOT_EMPTY) -}}
{{ phrase('ConditionFileNotEmpty', SYSTEMD_CONDITION_FILE_NOT_EMPTY) -}}
{{ phrase('ConditionFileIsExecutable', SYSTEMD_CONDITION_FILE_IS_EXECUTABLE) -}}
{{ phrase('AssertArchitecture', SYSTEMD_ASSERT_ARCHITECTURE) -}}
{{ phrase('AssertVirtualization', SYSTEMD_ASSERT_VIRTUALIZATION) -}}
{{ phrase('AssertHost', SYSTEMD_ASSERT_HOST) -}}
{{ phrase('AssertKernelCommandLine', SYSTEMD_ASSERT_KERNEL_COMMAND_LINE) -}}
{{ phrase('AssertSecurity', SYSTEMD_ASSERT_SECURITY) -}}
{{ phrase('AssertCapability', SYSTEMD_ASSERT_CAPABILITY) -}}
{{ phrase('AssertACPower', SYSTEMD_ASSERT_AC_POWER) -}}
{{ phrase('AssertNeedsUpdate', SYSTEMD_ASSERT_NEEDS_UPDATE) -}}
{{ phrase('AssertFirstBoot', SYSTEMD_ASSERT_FIRST_BOOT) -}}
{{ phrase('AssertPathExists', SYSTEMD_ASSERT_PATH_EXISTS) -}}
{{ phrase('AssertPathExistsGlob', SYSTEMD_ASSERT_PATH_EXISTS_GLOB) -}}
{{ phrase('AssertPathIsDirectory', SYSTEMD_ASSERT_PATH_IS_DIRECTORY) -}}
{{ phrase('AssertPathIsSymbolicLink', SYSTEMD_ASSERT_PATH_IS_SYMBOLIC_LINK) -}}
{{ phrase('AssertPathIsMountPoint', SYSTEMD_ASSERT_PATH_IS_MOUNT_POINT) -}}
{{ phrase('AssertPathIsReadWrite', SYSTEMD_ASSERT_PATH_IS_READ_WRITE) -}}
{{ phrase('AssertDirectoryNotEmpty', SYSTEMD_ASSERT_DIRECTORY_NOT_EMPTY) -}}
{{ phrase('AssertFileNotEmpty', SYSTEMD_ASSERT_FILE_NOT_EMPTY) -}}
{{ phrase('AssertFileIsExecutable', SYSTEMD_ASSERT_FILE_IS_EXECUTABLE) -}}
{% for key, value in (SYSTEMD_UNITS|default({}, True)).items() -%}
{{key}}={{value}}
{% endfor -%}
{{ '\n' -}}

[Service]
Type={{ SYSTEMD_TYPE|default("simple") }}
ExecStart={{ SYSTEMD_EXEC }}
{% if SYSTEMD_CWD|default(True) %}
WorkingDirectory={{ SYSTEMD_CWD|default(SYSTEMD_WORKING_DIRECTORY)|default(DIR)|replace('~', '%h', 1) }}
{% endif %}
{% if item|default(False)|bool and not SYSTEMD_IDENTIFIER|default(False) %}
SyslogIdentifier={{ NAME }}@%I
{% endif %}
{% if ENV|default(False) and not SYSTEMD_ENV_BYPASS|default(False) %}
EnvironmentFile={{DIR}}/env
{% endif %}
{{ phrase('Environment', SYSTEMD_ENV) -}}
{# {{ phrases('service') }} -#}
{# {{ phrases('exec') }} -#}
{{ phrase('RemainAfterExit', SYSTEMD_REMAIN_AFTER_EXIT) -}}
{{ phrase('GuessMainPID', SYSTEMD_GUESS_MAIN_PID) -}}
{{ phrase('PIDFile', SYSTEMD_PID_FILE) -}}
{{ phrase('BusName', SYSTEMD_BUS_NAME) -}}
{{ phrase('ExecStart', SYSTEMD_EXEC_START) -}}
{{ phrase('ExecStartPre', SYSTEMD_EXEC_START_PRE) -}}
{{ phrase('ExecPost', SYSTEMD_EXEC_POST) -}}
{{ phrase('ExecReload', SYSTEMD_EXEC_RELOAD) -}}
{{ phrase('ExecStop', SYSTEMD_EXEC_STOP) -}}
{{ phrase('ExecStopPost', SYSTEMD_EXEC_STOP_POST) -}}
{{ phrase('RestartSec', SYSTEMD_RESTART_SEC) -}}
{{ phrase('TimeoutStartSec', SYSTEMD_TIMEOUT_START_SEC) -}}
{{ phrase('TimeoutStopSec', SYSTEMD_TIMEOUT_STOP_SEC) -}}
{{ phrase('TimeoutSec', SYSTEMD_TIMEOUT_SEC) -}}
{{ phrase('RuntimeMaxSec', SYSTEMD_RUNTIME_MAX_SEC) -}}
{{ phrase('WatchdogSec', SYSTEMD_WATCHDOG_SEC) -}}
{{ phrase('Restart', SYSTEMD_RESTART) -}}
{{ phrase('SuccessExitStatus', SYSTEMD_SUCCESS_EXIT_STATUS) -}}
{{ phrase('RestartPreventExitStatus', SYSTEMD_RESTART_PREVENT_EXIT_STATUS) -}}
{{ phrase('SuccessExitStatus', SYSTEMD_SUCCESS_EXIT_STATUS) -}}
{{ phrase('RestartPreventExitStatus', SYSTEMD_RESTART_PREVENT_EXIT_STATUS) -}}
{{ phrase('RestartForceExitStatus', SYSTEMD_RESTART_FORCE_EXIT_STATUS) -}}
{{ phrase('PermissionsStartOnly', SYSTEMD_PERMISSIONS_START_ONLY) -}}
{{ phrase('RootDirectoryStartOnly', SYSTEMD_ROOT_DIRECTORY_START_ONLY) -}}
{{ phrase('NonBlocking', SYSTEMD_NON_BLOCKING) -}}
{{ phrase('NotifyAccess', SYSTEMD_NOTIFY_ACCESS) -}}
{{ phrase('Sockets', SYSTEMD_SOCKETS) -}}
{{ phrase('FailureAction', SYSTEMD_FAILURE_ACTION) -}}
{{ phrase('FileDescriptorStoreMax', SYSTEMD_FILE_DESCRIPTOR_STORE_MAX) -}}
{{ phrase('USBFunctionDescription', SYSTEMD_USB_FUNCTION_DESCRIPTION) -}}
{{ phrase('USBFunctionStrings', SYSTEMD_USB_FUNCTION_STRINGS) -}}
{#- EXEC -#}
{# {{ phrase('WorkingDirectory', SYSTEMD_WORKING_DIRECTORY) -}} #}
{{ phrase('RootDirectory', SYSTEMD_ROOT_DIRECTORY) -}}
{{ phrase('User', SYSTEMD_USER) -}}
{{ phrase('Group', SYSTEMD_GROUP) -}}
{{ phrase('DynamicUser', SYSTEMD_DYNAMIC_USER) -}}
{{ phrase('SupplementaryGroups', SYSTEMD_SUPPLEMENTARY_GROUPS) -}}
{{ phrase('RemoveIPC', SYSTEMD_REMOVE_IPC) -}}
{{ phrase('Nice', SYSTEMD_NICE) -}}
{{ phrase('OOMScoreAdjust', SYSTEMD_OOM_SCORE_ADJUST) -}}
{{ phrase('IOSchedulingClass', SYSTEMD_IO_SCHEDULING_CLASS) -}}
{{ phrase('IOSchedulingPriority', SYSTEMD_IO_SCHEDULING_PRIORITY) -}}
{{ phrase('CPUSchedulingPolicy', SYSTEMD_CPU_SCHEDULING_POLICY) -}}
{{ phrase('CPUSchedulingPriority', SYSTEMD_CPU_SCHEDULING_PRIORITY) -}}
{{ phrase('CPUSchedulingResetOnFork', SYSTEMD_CPU_SCHEDULING_RESET_ON_FORK) -}}
{{ phrase('CPUAffinity', SYSTEMD_CPU_AFFINITY) -}}
{{ phrase('UMask', SYSTEMD_UMASK) -}}
{{ phrase('Environment', SYSTEMD_ENVIRONMENT) -}}
{{ phrase('EnvironmentFile', SYSTEMD_ENVIRONMENT_FILE) -}}
{{ phrase('PassEnvironment', SYSTEMD_PASS_ENVIRONMENT) -}}
{{ phrase('StandardInput', SYSTEMD_STANDARD_INPUT) -}}
{{ phrase('StandardOutput', SYSTEMD_STANDARD_OUTPUT) -}}
{{ phrase('StandardError', SYSTEMD_STANDARD_ERROR) -}}
{{ phrase('TTYPath', SYSTEMD_TTY_PATH) -}}
{{ phrase('TTYReset', SYSTEMD_TTY_RESET) -}}
{{ phrase('TTYHangup', SYSTEMD_TTY_HANGUP) -}}
{{ phrase('TTYVTDisallocate', SYSTEMD_TTY_VT_DISALLOCATE) -}}
{{ phrase('SyslogIdentifier', SYSTEMD_SYSLOG_IDENTIFIER) -}}
{{ phrase('SyslogFacility', SYSTEMD_SYSLOG_FACILITY) -}}
{{ phrase('SyslogLevel', SYSTEMD_SYSLOG_LEVEL) -}}
{{ phrase('SyslogLevelPrefix', SYSTEMD_SYSLOG_LEVEL_PREFIX) -}}
{{ phrase('TimerSlackNSec', SYSTEMD_TIMER_SLACK_NSEC) -}}
{{ phrase('LimitCPU', SYSTEMD_LIMIT_CPU) -}}
{{ phrase('LimitFSIZE', SYSTEMD_LIMIT_FSIZE) -}}
{{ phrase('LimitDATA', SYSTEMD_LIMIT_DATA) -}}
{{ phrase('LimitSTACK', SYSTEMD_LIMIT_STACK) -}}
{{ phrase('LimitCORE', SYSTEMD_LIMIT_CORE) -}}
{{ phrase('LimitRSS', SYSTEMD_LIMIT_RSS) -}}
{{ phrase('LimitNOFILE', SYSTEMD_LIMIT_NOFILE) -}}
{{ phrase('LimitAS', SYSTEMD_LIMIT_AS) -}}
{{ phrase('LimitNPROC', SYSTEMD_LIMIT_NPROC) -}}
{{ phrase('LimitMEMLOCK', SYSTEMD_LIMIT_MEMLOCK) -}}
{{ phrase('LimitLOCKS', SYSTEMD_LIMIT_LOCKS) -}}
{{ phrase('LimitSIGPENDING', SYSTEMD_LIMIT_SIGPENDING) -}}
{{ phrase('LimitMSGQUEUE', SYSTEMD_LIMIT_MSGQUEUE) -}}
{{ phrase('LimitNICE', SYSTEMD_LIMIT_NICE) -}}
{{ phrase('LimitRTPRIO', SYSTEMD_LIMIT_RTPRIO) -}}
{{ phrase('LimitRTTIME', SYSTEMD_LIMIT_RTTIME) -}}
{{ phrase('PAMName', SYSTEMD_PAM_NAME) -}}
{{ phrase('CapabilityBoundingSet', SYSTEMD_CAPABILITY_BOUNDING_SET) -}}
{{ phrase('AmbientCapabilities', SYSTEMD_AMBIENT_CAPABILITIES) -}}
{{ phrase('SecureBits', SYSTEMD_SECURE_BITS) -}}
{{ phrase('ReadWritePaths', SYSTEMD_READ_WRITE_PATHS) -}}
{{ phrase('ReadOnlyPaths', SYSTEMD_READ_ONLY_PATHS) -}}
{{ phrase('InaccessiblePaths', SYSTEMD_INACCESSIBLE_PATHS) -}}
{{ phrase('PrivateTmp', SYSTEMD_PRIVATE_TMP) -}}
{{ phrase('PrivateDevices', SYSTEMD_PRIVATE_DEVICES) -}}
{{ phrase('PrivateNetwork', SYSTEMD_PRIVATE_NETWORK) -}}
{{ phrase('PrivateUsers', SYSTEMD_PRIVATE_USERS) -}}
{{ phrase('ProtectSystem', SYSTEMD_PROTECT_SYSTEM) -}}
{{ phrase('ProtectHome', SYSTEMD_PROTECT_HOME) -}}
{{ phrase('ProtectedKernelTunables', SYSTEMD_PROTECTED_KERNEL_TUNABLES) -}}
{{ phrase('ProtectControlGroups', SYSTEMD_PROTECT_CONTROL_GROUPS) -}}
{{ phrase('MountFlags', SYSTEMD_MOUNT_FLAGS) -}}
{{ phrase('UtmpIdentifiers', SYSTEMD_UTMP_IDENTIFIERS) -}}
{{ phrase('UtmpModes', SYSTEMD_UTMP_MODES) -}}
{{ phrase('SELinuxContext', SYSTEMD_SELINUX_CONTEXT) -}}
{{ phrase('AppArmorProfile', SYSTEMD_APPARMOR_PROFILE) -}}
{{ phrase('SmackProcessLabel', SYSTEMD_SMACK_PROCESS_LABEL) -}}
{{ phrase('IgnoreSIGPIPE', SYSTEMD_IGNORE_SIGPIPE) -}}
{{ phrase('NoNewPrivileges', SYSTEMD_NO_NEW_PRIVILEGES) -}}
{{ phrase('SystemCallFilter', SYSTEMD_SYSTEM_CALL_FILTER) -}}
{{ phrase('SystemCallErrorNumber', SYSTEMD_SYSTEM_CALL_ERROR_NUMBER) -}}
{{ phrase('SystemCallArchitectures', SYSTEMD_SYSTEM_CALL_ARCHITECTURES) -}}
{{ phrase('RestrictAddressFamilies', SYSTEMD_RESTRICT_ADDRESS_FAMILIES) -}}
{{ phrase('ProtectKernelModules', SYSTEMD_PROTECT_KERNEL_MODULES) -}}
{{ phrase('Personality', SYSTEMD_PERSONALITY) -}}
{{ phrase('RuntimeDirectory', SYSTEMD_RUNTIME_DIRECTORY) -}}
{{ phrase('RuntimeDirectoryMode', SYSTEMD_RUNTIME_DIRECTORY_MODE) -}}
{{ phrase('MemoryDenyWriteExecute', SYSTEMD_MEMORY_DENY_WRITE_EXECUTE) -}}
{{ phrase('RestrictRealtime', SYSTEMD_RESTRICT_REALTIME) -}}
{{ phrase('TasksMax', SYSTEMD_TASKS_MAX) -}}
{{ phrase('Delegate', SYSTEMD_DELEGATE) -}}
{{ phrase('KillMode', SYSTEMD_KILL_MODE) -}}
{% for key, value in (SYSTEMD_SERVICES|default({}, True)).items() -%}
{{key}}={{value}}
{% endfor -%}
{{ '\n' -}}

[Install]
WantedBy={{ "multi-user" if not USERMODE|default(False) else "default" }}.target
{# {{ phrases('install') }} -#}
{{ phrase('Alias', SYSTEMD_ALIAS) -}}
{{ phrase('WantedBy', SYSTEMD_WANTED_BY) -}}
{{ phrase('RequiredBy', SYSTEMD_REQUIRED_BY) -}}
{{ phrase('Also', SYSTEMD_ALSO) -}}
{{ phrase('DefaultInstances', SYSTEMD_DEFAULT_INSTANCES) -}}
{% for key, value in (SYSTEMD_INSTALLS|default({}, True)).items() -%}
{{key}}={{value}}
{% endfor -%}
