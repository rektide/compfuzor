# Example multistrap configuration file for the sid shortcut.
{% macro repo_names(repos) %}{% set sep = joiner(" ") %}{% for r in repos if r.name %}{{sep()}}{{ r.name }}{% endfor %}{% endmacro %}

[General]
arch={{ ARCH }}
directory=
# same as --tidy-up option if set to true
cleanup=true
# same as --no-auth option if set to true
# keyring packages listed in each debootstrap will
# still be installed.
noauth={% if noauth is defined and noauth %}true{% else %}false{% endif %}{{""}}
# whether to add the /suite to be explicit about where apt
# needs to look for packages. Default is false.
explicitsuite=false
# extract all downloaded archives (default is true)
unpack=true
# the order of sections is not important.
# the debootstrap option determines which repository
# is used to calculate the list of Priority: required packages.
debootstrap={{ repo_names(REPOS) }}
aptsources={{ repo_names(REPOS) }}
aptpreferences={{ETC}}/preferences
omitrequired=true
#omitrequired=false
tarballname={{ BASETGZ }}

{% for REPOSITORY in REPOS %}
[{{  REPOSITORY.name }}]
source={{ REPOSITORY.source }}
suite={{ REPOSITORY.suite }}
{% if REPOSITORY.pkg_sets is defined %}{% for PKGSET in REPOSITORY.pkg_sets %}
packages={{ vars[PKGSET]|default(hostvars[inventory_hostname][PKGSET])|join(" ") }}
{% endfor %}{% endif %}
{% if REPOSITORY.pkgs is defined %}
packages={{ REPOSITORY.pkgs|join(" ") }}
{% endif %}
{% if REPOSITORY.keyring is defined %}
keyring={{ REPOSITORY.keyring }}
{% endif %}
{% if REPOSITORY.includeDebSrc is not defined or not REPOSITORY.includeDebSrc %}
omitdebsrc=true
{% endif %}
{% if REPOSITORY.components is defined %}
{% set space= joiner(" ") %}
components={% for comp in REPOSITORY.components %}{{space()}}{{comp}}{% endfor %}
{% endif %}

{% endfor %}
