#!/bin/bash
set -e
export TIMESTAMP="$(date +%y.%m.%d-%T)"
[ -z "$DIR" ] && export DIR="{{DIR}}"
{% if ENV|default(False) or has_env.stdout|int == 1 -%}
[ -n "$ENV_BYPASS" ] || source $(command -v envdefault || true) $DIR/env.export
{% endif %}
# V>98 triggers set -x. but save set -x state to restore later, in case being sourced.
(( V > 98 )) && case "$-" in *x*) _BIN_SETX_STATE+=(1) ;; *) _BIN_SETX_STATE+=(0) ;; esac && set -x

{% if item.comments is defined %}#{{item.comments}}{% endif %}

{% for var in item.vars|default([]) %}
export {{var}}="{{ '${' }}{{ var }}-{{ hostvars[inventory_hostname][var]|default(vars[var]) }}{{ '}'}}"
{% endfor %}
{% if item.basedir|default(True) == True %}
cd "${DIR}"
{% elif item.basedir|default(True) == False %}
{% elif item.basedir[0] == "/" or item.basedir[0] == "~" %}
cd {{item.basedir}}
{% else %}
cd {{DIR}}/{{item.basedir}}
{% endif %}

{{ item.content|default("")|arrayitize|join("\n") }}
{{ item.exec|default("")|arrayitize|join("\n") }}
{{ item.execs|default("")|arrayitize|join("\n") }}

if (( V > 98 )); then
	(( ${_BIN_SETX_STATE[-1]} > 0 )) || set +x # restore
	_BIN_SETX_STATE=("${_BIN_SETX_STATE[@]:1}") # pop
fi
