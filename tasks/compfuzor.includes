---
- include: ./compfuzor/basevars.includes
- include: ./compfuzor/repos.includes

- include: ./compfuzor/dirs.includes
- include: ./compfuzor/var.includes include=OPT
- include: ./compfuzor/var.includes include=SRV
- include: ./compfuzor/var.includes include=ETC
- include: ./compfuzor/var.includes include=VAR
- include: ./compfuzor/var.includes include=VAR
- include: ./compfuzor/var.includes include=LOG
- include: ./compfuzor/var.includes include=SPOOL
- include: ./compfuzor/var.includes include=CACHE
- include: ./compfuzor/var.includes include=SRC
- include: ./compfuzor/var.includes include=PID
- include: ./compfuzor/var.includes include=RUN

- include: ./compfuzor/fs.includes include=OPT
- include: ./compfuzor/fs.includes include=SRV
- include: ./compfuzor/fs.includes include=ETC
- include: ./compfuzor/fs.includes include=VAR
- include: ./compfuzor/fs.includes include=LOG
- include: ./compfuzor/fs.includes include=SPOOL
- include: ./compfuzor/fs.includes include=CACHE
- include: ./compfuzor/fs.includes include=SRC
- include: ./compfuzor/fs.includes include=PID
- include: ./compfuzor/fs.includes include=RUN

# BINS, unlike all others, we want to keep under DIR, and link into BINS_DIR as needed, & only if flagged to do so
- debug: "msg=Compfuzor: Handle `BINS`"
- name: "Create `{{DIR}}/bin`"
  file: path="{{DIR}}/bin" state=directory
  when: BINS is defined and BINS_BYPASS|default(False) != True
- name:  "Copy `BINS` into place`"
  template: src="files/{{item.src|default(item.name) if item is mapping else TYPE|default(NAME)+'/'+item }}" dest="{{DIR}}/bin/{{item.dest|default(item.name) if item is mapping else item}}" mode={{item.mode|default(0755)}}
  with_items: BINS
  when: BINS is defined and BINS_BYPASS|default(False) != True
- name: "Run all `BINS` that have an `args`"
  shell: "chdir={{DIR}} {{ DIR+'/bin/'+item.dest|default(item.name) if item.args is defined else '/bin/true' }}{{ ' '+item.args if item.args is defined else '' }}"
  changed_when: 'item.args is defined'
  with_items: BINS
  when: BINS is defined and BINS_BYPASS|default(False) != True


# TODO: link into BINS_DIR if flagged

- file: src="{{ DIR if LINKS[item]|first != '/' else '' }}{{ LINKS[item] }}" dest="{{DIR}}/{{item}}" state=link
  with_items: LINKS.keys()
  when: LINKS is defined

- set_fact: SRC="files/{{TYPE}}"
  when: SRC is not defined and TYPE is defined and NAME is not defined
- set_fact: SRC="files/{{NAME}}"
  when: SRC is not defined and NAME is defined
- set_fact: WITHS="{{ '--with-'+WITH|join(' --with-') if WITH is defined else '' }}" ENABLES="{{ '--enable-'+ENABLE|join(' --enable-') if ENABLE is defined else '' }}" PREFIX="{{PREFIX|default(OPT)}}"

- include: apt.includes
  when: APT_REPO is defined
- apt: state="{{APT_INSTALL}}" pkg={{item}}
  with_items: PKGS
  when: PKGS is defined and PKGS_BYPASS is not defined

- include: systemd.includes
- debug: msg="done with compfuzor.includes"
