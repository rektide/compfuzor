---
#- name: "Test for parent directories for LINKS"
#  stat:
#    path: "{{_parent}}"
#  become: "{{ _parent|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid) }}"
#  when: LINKS|default(False) and not LINK_BYPASS|default(False)
#  with_items: "{{ LINKS|listify }}"
#  vars:
#    _parent: "{{ item.dest|default(item.key)|defaultDir(DIR)|dirname }}"
#  register: _link_stats
- name: "Compfuzor: Create LINKS"
  file:
  args:
    src: "{{ _src }}"
    dest: "{{ _dest }}"
    force: "{{ item.force|default(False) }}"
    state: link
  become: "{{ _dest|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid)}}"
  when: LINKS|default(False) and not LINK_BYPASS|default(False)
  with_items: "{{ LINKS|listify }}"
  vars:
    _fsh: "{{hostvars[inventory_hostname][include|upper]|default(vars[include|upper])}}"
    _relative: "{{DIR}}/{{include}}"
    _dir: "{{FS_CONTAINERED|default(False)|ternary(_relative, _fsh)}}"
    _src: "{{ item.src|default(item.name|default(item, true), true)|defaultDir('files/'+TYPE|default(NAME)) if not item.srcTemplate is defined else lookup('templateVar', item.srcTemplate)|defaultDir('files/'+TYPE|default(NAME)) }}"
    _dest: "{{ item.dest|default(item.name|default(item, true), true)|defaultDir(_dir) if not item.destTemplate is defined else lookup('templateVar', item.destTemplate)|defaultDir(_dir) }}"
