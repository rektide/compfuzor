---
- debug: "msg='Compfuzor: create `LINKS`'"
#- name: "Test for parent directories for LINKS"
#  stat:
#    path: "{{_parent}}"
#  become: "{{ _parent|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid) }}"
#  when: LINKS|default(False) and not LINK_BYPASS|default(False)
#  with_items: "{{ LINKS|listify }}"
#  vars:
#    _parent: "{{ item.dest|default(item.key)|defaultDir(DIR)|dirname }}"
#  register: _link_stats
#- debug:
#    msg: "what the {{item|to_json}}"
#  with_items: "{{ _link_stats.results }}"
#- name: "Create directories for LINKS"
#  file:
#  args:
#    path: "{{ item.item.path|default(item.item.value) }}"
#    state: directory
#    user: "{{ USER|default(omit) }}" # OWNER?
#    group: "{{ GROUP|default(omit) }}"
#    mode: "{{ DIRMODE|default(MODE)|default(omit)}}"
#  become: "{{ item.item.path|default(item.item.value)|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid) }}"
#  when: LINKS|default(False) and not LINK_BYPASS|default(False) and item.stat.exists == False
#  with_items: "{{ _link_stats.results }}"
#- debug:
#    msg: "Create LINKS {{ _src}} {{_dest}}"
#  when: LINKS|default(False) and not LINK_BYPASS|default(False)
#  with_items: "{{ LINKS|to_json|from_json|listify }}"
#  vars:
#    _src: "{{ item.src|default(item.value)|defaultDir(DIR) }}"
#    _dest: "{{ lookup('templateVar', item.dest|default(item.key))|defaultDir(DIR) }}"
- name: "hack to resolve LINKS"
  set_fact:
    LINKS: "{{LINKS|to_nice_json|from_json}}"
  when: LINKS|default(False)
- name: "Create LINKS"
  file:
  args:
    src: "{{ _src }}"
    dest: "{{ _dest }}"
    force: "{{ item.force|default(False) }}"
    state: link
  become: "{{ _dest|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid)}}"
  when: LINKS|default(False) and not LINK_BYPASS|default(False)
  with_items: "{{ LINKS|listify }}"
  vars:
    _src: "{{ item.src|default(item.value)|defaultDir(DIR) }}"
    #_dest: "{{ lookup('templateVar', item.dest|default(item.key))|defaultDir(DIR) }}"
    _dest: "{{ item.dest|default(item.key)|defaultDir(DIR) }}"
