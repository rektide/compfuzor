---
- debug: "msg='Compfuzor: create `LINKS`'"

- name: "Test for parent directories for LINKS"
  stat:
    path: "{{_parent}}"
  become: "{{ _parent|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid) }}"
  when: LINKS|default(False) and not LINK_BYPASS|default(False)
  with_listify: "{{ LINKS }}"
  vars:
    _parent: "{{ item.dest|default(item.key)|defaultDir(DIR)|dirname }}"
  register: _link_stats
- debug:
    msg: "spew {{ _link_stats }}"
- name: "Create directories for LINKS"
  file:
  args:
    path: "{{ _dest }}"
    state: directory
  become: "{{ _dest|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid) }}"
  when: LINKS|default(False) and not LINK_BYPASS|default(False) and (_link_stats.results|selectattr('item.key', 'eq', item.key)|list|first).stat.exists == False
  with_listify: "{{ LINK}}"
  vars:
    _dest: "{{ item.dest|default(item.key)|defaultDir(DIR)|dirname }}"
- name: "Create LINKS"
  file:
  args:
    src: "{{ _src }}"
    dest: "{{ _dest }}"
    force: "{{ item.force|default(False) }}"
    state: link
  become: "{{ _dest|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid)}}"
  when: LINKS|default(False) and not LINK_BYPASS|default(False)
  with_items: "{{ lookup('dict', LINKS) if LINKS is mapping else LINKS }}"
  vars:
    _src: "{{ item.src|default(item.value)|defaultDir(DIR) }}"
    _dest: "{{ item.dest|default(item.key)|defaultDir(DIR) }}"
- fail: msg="nope"
