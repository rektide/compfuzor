- debug: "msg='Compufuzor: copy in and link env files'"
- name: copy in env file
  template:
    src: "files/_env"
    dest: "{{_dest}}"
    owner: "{{OWNER|default(omit)}}"
    group: "{{GROUP|default(omit)}}"
  become: "{{_dest|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid)}}"
  when: (item.hasEnv or ENV|default(False) is truthy) and not item.skip|default(False)
  loop:
    - file: env
      hasEnv: "{{has_env.stdout|default(0)|int > 0}}"
    - file: env.usermode
      hasEnv: "{{has_env_export.stdout|default(0)|int > 0}}"
      exportMode: True
      skip: "{{True if ENV_USER|default(False) is falsy else False}}"
      usermode: True
    - file: env.export
      hasEnv: "{{has_env_export.stdout|default(0)|int > 0}}"
      skip: "{{ENV_IS_EXPORT|default(False)}}"
      exportMode: True
  vars:
    _dest: "{{DIR}}/{{item.file}}"
    _srcHas: "files/{{TYPE|default(NAME)}}/{{item.file}}"
    _srcDefault: "files/_env"
    _src: "{{_srcDefault if not item.hasEnv else _srcHas}}"
    export_mode: "{{item.exportMode|default(False)}}"
    _usermode: "{{item.usermode|default(USERMODE|default(False)) is truthy}}"
    _globalBins: "{{_usermode|ternary(USERMODE_GLOBAL_BINS_DIR, GLOBAL_BINS_DIR)}}"

# in case one only needs a env, and env.export is the same
- name: link env export to env if the same
  file:
    src: "{{DIR}}/env"
    dest: "{{DIR}}/env.export"
    state: link
  when: ENV_IS_EXPORT|default(False)

- name: link env.`NAME` into PREFIX_DIR, if not existing
  file:
    src: "{{DIR}}/{{item.file}}"
    dest: "{{_dest}}"
    state: link
    owner: "{{OWNER|default(omit)}}"
    group: "{{GROUP|default(omit)}}"
  become: "{{_dest|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid)}}"
  # might be cool to have an exists check that ignores dead symlinks
  when: PREFIX_DIR|default(False) and (item.hasEnv or ENV|default(False) is truthy) and not item.skip|default(False) and _dest is not exists
  loop:
    - file: env
      hasEnv: "{{has_env.stdout|default(0)|int > 0}}"
    - file: env.export
      hasEnv: "{{has_env_export.stdout|default(0)|int > 0}}"
      skip: "{{ENV_IS_EXPORT|default(False)}}"
  vars:
    _dest: "{{PREFIX_DIR}}/{{item.file}}.{{NAME|default(TYPE)}}"
