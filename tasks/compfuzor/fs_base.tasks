- debug: "msg='Compfuzor: create base files'"
- name: "Creating base `DIR`"
  file:
    path: "{{DIR}}"
    state: directory
    mode: "{{DIRMODE}}"
    owner: "{{should_become|ternary(OWNER|default(ansible_user_id),omit)}}"
    group: "{{should_become|ternary(GROUP|default(ansible_user_gid),omit)}}"
  become: "{{should_become}}"
  vars:
    should_become: "{{DIR|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid)}}"
  when: DIR|default(True)
- name: "Creating `DIRS`"
  file:
    path: "{{_dest}}"
    state: directory
    mode: "{{DIRMODE}}"
    owner: "{{should_become|ternary(OWNER|default(ansible_user_id),omit)}}"
    group: "{{should_become|ternary(GROUP|default(ansible_user_gid),omit)}}"
  with_items: DIRS
  become: "{{should_become}}"
  when: DIRS is defined
  vars:
    _dest: "{{item|defaultDir(DIR)}}"
    should_become: "{{_dest|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid)}}"
- name: "Creating `FILES`"
  # someone wanted a basename here but eclipse has a ../content & like yeah, that's fine. locales holds the blame. see cf0fdccf0c.
  template:
    src: "files/{{TYPE|default(NAME)}}/{{item.src|default(item.name)|default(item)}}"
    dest: "{{dest}}"
    owner: "{{should_become|ternary(OWNER|default(ansible_user_id),omit)}}"
    group: "{{should_become|ternary(GROUP|default(ansible_user_gid),omit)}}"
  with_items: "{{FILES}}"
  become: True
  when: FILES is defined and FILES is not mapping and not item.line|default(False)
  vars:
    dest: "{{DIR}}/{{item.dest|default(item.name)|default(item)}}"
    should_become: "{{dest|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid)}}"
- name: "Creating `FILES` mapping"
  template:
    src: "files/{{TYPE|default(NAME)}}/{{ item[1] }}"
    dest: "{{_dest}}"
    owner: "{{OWNER|default(omit)}}"
    group: "{{GROUP|default(omit)}}"
  with_items: FILES.items()
  become: "{{_dest|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid)}}"
  when: FILES is defined and FILES is mapping
  vars:
    _dest: "{{ DIR+'/' if item[0]|first != '/' and item[0]|first != '~' else '' }}{{item[0]}}"
    should_become: "{{_dest|should_become(OWNER|default(), ansible_user_id, GROUP|default(), ansible_user_gid)}}"

- name: "File lineinfile"
  lineinfile:
    dest: "{{dest}}"
    line: "{{item.line}}"
    regexp: "{{item.regexp|default('^' + item.line)}}"
    create: "{{item.create|default(True)}}"
    state: "{{item.state|default(omit)}}"
    owner: "{{should_become|ternary(owner|default(ansible_user_id, true),omit)}}"
    group: "{{should_become|ternary(group|default(ansible_user_gid, true),omit)}}"
  with_items: "{{FILES}}"
  become: "{{should_become}}"
  when: FILES is defined and FILES is not mapping and item.line|default(False)
  vars:
    owner: "{{item.owner|default(OWNER|default(none, true), true)}}"
    group: "{{item.group|default(GROUP|default(none, true), true)}}"
    dest: "{{item.name|defaultDir(DIR)}}"
    should_become: "{{dest|should_become(owner, ansible_user_id, group, ansible_user_gid)}}"
