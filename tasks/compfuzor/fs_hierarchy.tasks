---
- debug: "msg='Create {{include|upper}} directories & files'"

# initialize temporary vars
- name: "source temporary {{include|upper}} facts"
  set_fact:
  args:
    dir: "{{include|upper+'S_DIR'}}" # name of directory to use
    dirs: "{{include|upper}}_DIRS" # subdirectories to create, or True
    base: "{{include|upper}}_DIR" # create empty directory
    files: "{{include|upper}}_FILES" # files to template into place
    d: "{{include|upper}}_D" # assemblies to create
    bypass: "{{include|upper}}_BYPASS" # skip doing this stuff!
    link_bypass: "{{include_upper}}_LINK_BYPASS"
    dirpath: "{{hostvars[inventory_hostname][include|upper]|default(vars[include|upper])}}" # lookup the path for the dir
    go: True
- name: "Cancel go if nothing to do"
  set_fact: go="" # do not go if bypass, or nothing is defined pertaining to this component
  when: "({{bypass}}|default(True)) and not (({{dirs}}|default(False)) or ({{files}}|default(False)) or ({{d}}|default(False)) or ({{base}}|default(False)))"

# create main directory
- name: "Create top {{include|upper}} directory"
  file: path="{{dirpath}}" state=directory mode="{{mode|default(770)}}"
  when: go|bool and not FS_CONTAINED|default(False)
# link include dir into DIR
- name: "Link top {{include|upper}} directory into `DIR`"
  file: src="{{dirpath}}" dest="{{DIR}}/{{include|lower}}" state=link
  when: "go|bool and not DIR_BYPASS|default(False) and not DIR_LINK_BYPASS|default(False) and not {{link_bypass}}|default(False) and not FS_CONTAINED|default(False)"
# fs_contained - reverses stoage characteristic, installing under DIR rather than about
# create include subdirs in DIR
- name: "Create DIR's {{include|upper}} subdirectory - contained mode"
  file: path="{{DIR}}/{{include|lower}}" state=directory mode="{{mode|default(770)}}"
  when: go|bool and FS_CONTAINED|default(False)
# place links to subdirs into common locations
- name: "Link {{include|upper}} subdirectory into common global space- contained mode"
  file: src="{{DIR}}/{{include|lower}}" dest="{{dirpath}}" state=link
  when: "go|bool and not DIR_BYPASS|default(False) and not DIR_LINK_BYPASS|default(False) and not {{link_bypass}}|default(False) and FS_CONTAINED|default(False)"



# create subdirs
- name: "Create {{include|upper}} subdirs"
  file: path="{{dirpath}}/{{item}}" state=directory
  with_items: "{{hostvars[inventory_hostname][dirs]|default(vars[dirs])|default([])}}"
  when: "go|bool and {{dirs}} is sequence" # defined and {{dirs}} != True"
# create .d subdirectories
- name: "Create {{include|upper}} .d directories"
  file: path="{{dirpath}}/{{item}}.d" state=directory mode="{{mode|default(770)}}"
  with_items: "{{hostvars[inventory_hostname][d]|default(vars[d])|default([])}}"
  when: go|bool and hostvars[inventory_hostname][d]|default(vars[d])|default(False)

# include files
- name: "Create {{include|upper}} files"
  template: src="files/{{TYPE|default(NAME)}}/{{item.src|default(item.name)|default(item)}}" dest="{{dirpath}}/{{item.dest|default(item.name)|default(item)}}" owner="{{OWNER|default(omit)}}"
  with_items: "{{ hostvars[inventory_hostname][files]|default(vars[files])|default([])}}"
  when: go|bool and not item.raw|default(False)
- name: "Create raw {{include|upper}} files"
  copy: src="files/{{TYPE|default(NAME)}}/{{item.src|default(item.name)|default(item)}}" dest="{{dirpath}}/{{item.dest|default(item.name)|default(item)}}" owner="{{OWNER|default(omit)}}"
  with_items: "{{ hostvars[inventory_hostname][files]|default(vars[files])|default([])}}"
  when: go|bool and item.raw|default(False)
