- set_fact: SYSTEMD_SCOPE="{{SYSTEMD_SCOPE|default('system')}}"
- shell: pkg-config systemd --variable=systemduserunitdir
  register: SYSTEMD_USER_UNIT_DIR
- shell: pkg-config systemd --variable=systemdsystemunitdir
  register: SYSTEMD_SYSTEM_UNIT_DIR
- shell: pkg-config systemd --variable=systemduserconfdir
  register: SYSTEMD_USER_CONF_DIR
- shell: pkg-config systemd --variable=systemdsystemunitdir
  register: SYSTEMD_SYSTEM_CONF_DIR

- set_fact: SYSTEMD_USER_UNIT_DIR="{{SYSTEMD_USER_UNIT_DIR.stdout}}"
  when: SYSTEMD_USER_UNIT_DIR is not defined
- set_fact: SYSTEMD_SYSTEM_UNIT_DIR="{{SYSTEMD_SYSTEM_UNIT_DIR.stdout}}"
  when: SYSTEMD_SYSTEM_UNIT_DIR is not defined
- set_fact: SYSTEMD_USER_CONF_DIR="{{SYSTEMD_USER_CONF_DIR.stdout}}"
  when: SYSTEMD_USER_CONF_DIR is not defined
- set_fact: SYSTEMD_SYSTEM_CONF_DIR="{{SYSTEMD_SYSTEM_CONF_DIR.stdout}}"
  when: SYSTEMD_SYSTEM_CONF_DIR is not defined

- set_fact: SYSTEMD_UNIT_DIR="{{hostvars[inventory_hostname]['SYSTEMD_'+SYSTEMD_SCOPE|upper+'_UNIT_DIR']}}/{{NAME}}"
  when: SYSTEMD_UNIT_DIR is not defined
- set_fact: SYSTEMD_CONF_DIR="{{hostvars[inventory_hostname]['SYSTEMD_'+SYSTEMD_SCOPE|upper+'_CONF_DIR']}}/{{NAME}}"
  when: SYSTEMD_CONF_DIR is not defined

- include_vars: vars/systemd.vars

- include: systemd.unit.includes include=service
- include: systemd.unit.includes include=unit
- include: systemd.unit.includes include=socket
